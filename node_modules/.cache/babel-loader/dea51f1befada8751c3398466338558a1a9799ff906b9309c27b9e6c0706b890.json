{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emis_\\\\Desktop\\\\proyectoCalendario\\\\calendario-agendar-turnos\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calendar = () => {\n  _s();\n  const [selectedDate, setSelectedDate] = useState(null);\n\n  // Función para manejar el clic en una casilla del calendario\n  const handleCellClick = date => {\n    setSelectedDate(date);\n    // Aquí puedes mostrar la ventana emergente o vista lateral con más información sobre los turnos del día seleccionado\n  };\n\n  // Función para generar la cuadrícula de días del mes\n  const generateCalendarGrid = () => {\n    // Aquí puedes implementar la lógica para generar la cuadrícula de días del mes\n    // Puedes utilizar bibliotecas como moment.js o date-fns para facilitar el manejo de fechas\n\n    // Ejemplo de cuadrícula estática para un mes determinado (puedes reemplazar esto con tu lógica personalizada)\n    const monthGrid = [[1, 2, 3, 4, 5, 6, 7], [8, 9, 10, 11, 12, 13, 14], [15, 16, 17, 18, 19, 20, 21], [22, 23, 24, 25, 26, 27, 28], [29, 30, 31, null, null, null, null]];\n    return monthGrid.map((week, weekIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: week.map((day, dayIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n        onClick: () => handleCellClick(day),\n        className: selectedDate === day ? \"selected\" : \"\",\n        children: day\n      }, dayIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))\n    }, weekIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Sun\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Mon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Tue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Wed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Thu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Fri\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Sat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: generateCalendarGrid()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Calendar, \"rhrbPH1/NtfhiyDl62tZ0yGffOM=\");\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Calendar","_s","selectedDate","setSelectedDate","handleCellClick","date","generateCalendarGrid","monthGrid","map","week","weekIndex","children","day","dayIndex","onClick","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/emis_/Desktop/proyectoCalendario/calendario-agendar-turnos/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst Calendar = () => {\n  const [selectedDate, setSelectedDate] = useState(null);\n\n  // Función para manejar el clic en una casilla del calendario\n  const handleCellClick = (date) => {\n    setSelectedDate(date);\n    // Aquí puedes mostrar la ventana emergente o vista lateral con más información sobre los turnos del día seleccionado\n  };\n\n  // Función para generar la cuadrícula de días del mes\n  const generateCalendarGrid = () => {\n    // Aquí puedes implementar la lógica para generar la cuadrícula de días del mes\n    // Puedes utilizar bibliotecas como moment.js o date-fns para facilitar el manejo de fechas\n\n    // Ejemplo de cuadrícula estática para un mes determinado (puedes reemplazar esto con tu lógica personalizada)\n    const monthGrid = [\n      [1, 2, 3, 4, 5, 6, 7],\n      [8, 9, 10, 11, 12, 13, 14],\n      [15, 16, 17, 18, 19, 20, 21],\n      [22, 23, 24, 25, 26, 27, 28],\n      [29, 30, 31, null, null, null, null]\n    ];\n\n    return monthGrid.map((week, weekIndex) => (\n      <tr key={weekIndex}>\n        {week.map((day, dayIndex) => (\n          <td\n            key={dayIndex}\n            onClick={() => handleCellClick(day)}\n            className={selectedDate === day ? \"selected\" : \"\"}\n          >\n            {day}\n          </td>\n        ))}\n      </tr>\n    ));\n  };\n\n  return (\n    <div className=\"calendar\">\n      <table>\n        <thead>\n          <tr>\n            <th>Sun</th>\n            <th>Mon</th>\n            <th>Tue</th>\n            <th>Wed</th>\n            <th>Thu</th>\n            <th>Fri</th>\n            <th>Sat</th>\n          </tr>\n        </thead>\n        <tbody>{generateCalendarGrid()}</tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Calendar;\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}